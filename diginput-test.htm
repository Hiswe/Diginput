<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <link rel="stylesheet" href="css/qunit.css" type="text/css" media="screen" />
		<script type="text/javascript" src="http://code.jquery.com/jquery-latest.js"></script>
   		<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.5/jquery-ui.min.js"></script>
        <script type="text/javascript" src="js/qunit.js"></script>
        <script type="text/javascript" src="jquery.ui.diginput.js"></script>
        <script>
              $(document).ready(function(){
//			  	QUnit.log = function(result, message)
//				{
//					if (window.console && window.console.log)
//			        {
//			           window.console.log(result +' :: '+ message);
//			        }
//				}
			    module("FrSetting");
			    test("float data", function()
			    {
					expect(5);
					equals($.ui.diginput.format(0,'fr').string,
						'0');
					equals($.ui.diginput.format(100,'fr').string,
						'100');
					equals($.ui.diginput.format(1234567890,'fr').string,
						'1 234 567 890');
					equals($.ui.diginput.format(1234567890.7654321,'fr').string,
						'1 234 567 890.7654321');
					equals($.ui.diginput.format(1234567890.7654321).string,
						'1 234 567 890.7654321',
						'No format scheme passed in param');	
			    });			
			    test("String data", function()
			    {
					expect(8);
					equals($.ui.diginput.format('','fr').string,
						'');
					equals($.ui.diginput.format('','fr').number,
						'');
                    equals($.ui.diginput.format('.100','fr').string,
						'0.100');
                    equals($.ui.diginput.format('.100','fr').number,
						'0.100');
					equals($.ui.diginput.format('100','fr').string,
						'100');
					equals($.ui.diginput.format('1234567890','fr').string,
						'1 234 567 890');
					equals($.ui.diginput.format('1234567890.987654321','fr').string,
						'1 234 567 890.987654321');
					equals($.ui.diginput.format('1234567890.987654321').string,
						'1 234 567 890.987654321',
						'No format scheme passed in param');	
			    });
				test("String with coma replacement", function()
			    {
					expect(2);
					equals($.ui.diginput.format('1000,00','fr').string,
						'1 000.00');
					equals($.ui.diginput.format('1234567890,987654321','fr').string,
						'1 234 567 890.987654321');			
			    });
				test("String with non digit char", function()
			    {
					expect(7);
					equals($.ui.diginput.format('a.a','fr').string,
						'');					
					equals($.ui.diginput.format('a.a','fr').number,
						'');
					equals($.ui.diginput.format('oihaabiajnb10q0bijaààà0,0/**/=0','fr').string,
						'1 000.00');
					equals($.ui.diginput.format('12zahagjabjèè34567@@89@0.....9876543*--++21','fr').string,
							'1 234 567 890.987654321');	
					equals($.ui.diginput.format('12zahagjabjèè34567@@89@0.....987,6,,,543*--++,21','fr').string,
							'1 234 567 890.987654321');
					equals($.ui.diginput.format('12zahagjabjèè34567@@89@0,,,,987,6,,,543*--++,21','fr').string,
							'1 234 567 890.987654321');
					equals($.ui.diginput.format('12zahagjabjèè34567,,,89@0,,,,987,6,,,543*--++,21','fr').string,
							'1 234 567.890987654321');										
			    });
			    module("EnSetting");
				test("Mixed test", function()
			    {
					expect(6);
					equals($.ui.diginput.format('100','en').string,
						'100');
					equals($.ui.diginput.format('100,00','en').string,
						'100,00');
					equals($.ui.diginput.format('1234567890,987654321','en').string,
						'1.234.567.890,987654321');			
					equals($.ui.diginput.format(1234567890.4321,'en').string,
						'1.234.567.890,4321',
						'Number test');
					equals($.ui.diginput.format('123.456.789,0','en').string,
						'123.456.789,0');
					equals($.ui.diginput.format('aojajon?123hoo^^^^¨.45€€6````7.8£££9,,,,,,,0££','en').string,
						'123.456.789,0');						
			    });
				module("Custom set of options");
				test("Mixed test", function()
			    {
					expect(7);
					equals($.ui.diginput.format(100.00,{spacing:'_', floatSep:'|',floatFix:'|o'}).string,
						'100'); // en js 100.00 = 100
					equals($.ui.diginput.format('100|00',{spacing:'_', floatSep:'|',floatFix:'|o'}).string,
						'100|00');
					equals($.ui.diginput.format('100o00',{spacing:'_', floatSep:'|',floatFix:'|o'}).string,
						'100|00');						
					equals($.ui.diginput.format('1234567890,987654321',{spacing:'_', floatSep:'|',floatFix:'|o'}).string,
						'1_234_567_890_987_654_321');			
					equals($.ui.diginput.format('1234567890|4321',{spacing:'_', floatSep:'|',floatFix:'|o'}).string,
						'1_234_567_890|4321');
					equals($.ui.diginput.format('aojajon123hoo^^^^¨.45€€6````....7.8£££9|0££',{spacing:'_', floatSep:'|',floatFix:'|o'}).string,
						'0|1234567890',
						'No integer part');
					equals($.ui.diginput.format('ajajn?123h^^^^¨.45ooo€€6````....7.8£££9|0££',{spacing:'_', floatSep:'|',floatFix:'|o'}).string,
						'12_345|67890');						
			    });
				test("Test the float returned value", function()
			    {
					expect(7);
					equals($.ui.diginput.format('100',{spacing:'_', floatSep:'|',floatFix:'|o'}).number,
						'100');	
					equals($.ui.diginput.format('100|00',{spacing:'_', floatSep:'|',floatFix:'|o'}).number,
						'100.00');
					equals($.ui.diginput.format('100o00',{spacing:'_', floatSep:'|',floatFix:'|o'}).number,
						'100.00');						
					equals($.ui.diginput.format('1234567890,987654321',{spacing:'_', floatSep:'|',floatFix:'|o'}).number,
						'1234567890987654321');			
					equals($.ui.diginput.format('1234567890|4321',{spacing:'_', floatSep:'|',floatFix:'|o'}).number,
						'1234567890.4321');
					equals($.ui.diginput.format('aojajon123hoo^^^^¨.45€€6````....7.8£££9|0££',{spacing:'_', floatSep:'|',floatFix:'|o'}).number,
						'.1234567890',
						'No integer part');
					equals($.ui.diginput.format('ajajn?123h^^^^¨.45ooo€€6````....7.8£££9|0££',{spacing:'_', floatSep:'|',floatFix:'|o'}).number,
						'12345.67890');						
			    });			
			  });
        </script>
    </head>
    <body>
        <h1 id="qunit-header">Diginput test</h1>
        <h2 id="qunit-banner"></h2>
        <h2 id="qunit-userAgent"></h2>
        <ol id="qunit-tests">
        </ol>
    </body>
</html>
